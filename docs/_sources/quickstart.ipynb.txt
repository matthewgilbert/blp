{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "cardiovascular-environment",
   "metadata": {},
   "source": [
    "# Quickstart"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "expensive-amount",
   "metadata": {},
   "outputs": [],
   "source": [
    "import datetime\n",
    "import json\n",
    "\n",
    "import pandas\n",
    "\n",
    "from blp import blp"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "every-airfare",
   "metadata": {},
   "outputs": [],
   "source": [
    "bquery = blp.BlpQuery().start()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "third-serbia",
   "metadata": {},
   "source": [
    "## Excel like functionality"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "requested-actress",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>security</th>\n",
       "      <th>PX_LAST</th>\n",
       "      <th>VOLUME</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2019-01-02</td>\n",
       "      <td>SPY US Equity</td>\n",
       "      <td>250.18</td>\n",
       "      <td>126925199.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2019-01-02</td>\n",
       "      <td>TLT US Equity</td>\n",
       "      <td>122.15</td>\n",
       "      <td>19841527.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2019-01-03</td>\n",
       "      <td>SPY US Equity</td>\n",
       "      <td>244.21</td>\n",
       "      <td>144140692.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2019-01-03</td>\n",
       "      <td>TLT US Equity</td>\n",
       "      <td>123.54</td>\n",
       "      <td>21187045.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2019-01-04</td>\n",
       "      <td>SPY US Equity</td>\n",
       "      <td>252.39</td>\n",
       "      <td>142628834.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2019-01-04</td>\n",
       "      <td>TLT US Equity</td>\n",
       "      <td>122.11</td>\n",
       "      <td>12970226.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2019-01-07</td>\n",
       "      <td>SPY US Equity</td>\n",
       "      <td>254.38</td>\n",
       "      <td>103139100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2019-01-07</td>\n",
       "      <td>TLT US Equity</td>\n",
       "      <td>121.75</td>\n",
       "      <td>8498104.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2019-01-08</td>\n",
       "      <td>SPY US Equity</td>\n",
       "      <td>256.77</td>\n",
       "      <td>102512587.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2019-01-08</td>\n",
       "      <td>TLT US Equity</td>\n",
       "      <td>121.43</td>\n",
       "      <td>7737103.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>2019-01-09</td>\n",
       "      <td>SPY US Equity</td>\n",
       "      <td>257.97</td>\n",
       "      <td>95006554.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>2019-01-09</td>\n",
       "      <td>TLT US Equity</td>\n",
       "      <td>121.24</td>\n",
       "      <td>9349245.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>2019-01-10</td>\n",
       "      <td>SPY US Equity</td>\n",
       "      <td>258.88</td>\n",
       "      <td>96823923.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>2019-01-10</td>\n",
       "      <td>TLT US Equity</td>\n",
       "      <td>120.46</td>\n",
       "      <td>8222860.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         date       security  PX_LAST       VOLUME\n",
       "0  2019-01-02  SPY US Equity   250.18  126925199.0\n",
       "1  2019-01-02  TLT US Equity   122.15   19841527.0\n",
       "2  2019-01-03  SPY US Equity   244.21  144140692.0\n",
       "3  2019-01-03  TLT US Equity   123.54   21187045.0\n",
       "4  2019-01-04  SPY US Equity   252.39  142628834.0\n",
       "5  2019-01-04  TLT US Equity   122.11   12970226.0\n",
       "6  2019-01-07  SPY US Equity   254.38  103139100.0\n",
       "7  2019-01-07  TLT US Equity   121.75    8498104.0\n",
       "8  2019-01-08  SPY US Equity   256.77  102512587.0\n",
       "9  2019-01-08  TLT US Equity   121.43    7737103.0\n",
       "10 2019-01-09  SPY US Equity   257.97   95006554.0\n",
       "11 2019-01-09  TLT US Equity   121.24    9349245.0\n",
       "12 2019-01-10  SPY US Equity   258.88   96823923.0\n",
       "13 2019-01-10  TLT US Equity   120.46    8222860.0"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bquery.bdh(\n",
    "    [\"SPY US Equity\", \"TLT US Equity\"],\n",
    "    [\"PX_LAST\", \"VOLUME\"],\n",
    "    start_date=\"20190101\",\n",
    "    end_date=\"20190110\",\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "cathedral-scroll",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>security</th>\n",
       "      <th>NAME</th>\n",
       "      <th>PX_LAST</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>CL1 Comdty</td>\n",
       "      <td>Generic 1st 'CL' Future</td>\n",
       "      <td>62.7</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     security                     NAME  PX_LAST\n",
       "0  CL1 Comdty  Generic 1st 'CL' Future     62.7"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bquery.bdp([\"CL1 Comdty\"], [\"NAME\", \"PX_LAST\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "included-slovenia",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Member Ticker and Exchange Code</th>\n",
       "      <th>Percentage Weight</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>BOZ1</td>\n",
       "      <td>3.83</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>C Z1</td>\n",
       "      <td>5.46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>CLX1</td>\n",
       "      <td>8.86</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>COX1</td>\n",
       "      <td>7.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>CTZ1</td>\n",
       "      <td>1.54</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>GCZ1</td>\n",
       "      <td>11.96</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>HGZ1</td>\n",
       "      <td>5.17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>HOX1</td>\n",
       "      <td>2.34</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>KCZ1</td>\n",
       "      <td>3.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>KWZ1</td>\n",
       "      <td>1.68</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>LAX21</td>\n",
       "      <td>4.62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>LCV1</td>\n",
       "      <td>3.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>LHV1</td>\n",
       "      <td>1.90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>LNX1</td>\n",
       "      <td>2.43</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>LXX1</td>\n",
       "      <td>2.91</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>NGX21</td>\n",
       "      <td>10.28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>QSX1</td>\n",
       "      <td>2.86</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>S X1</td>\n",
       "      <td>4.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>SBV1</td>\n",
       "      <td>3.32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>SIZ1</td>\n",
       "      <td>3.26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>SMZ1</td>\n",
       "      <td>2.58</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>W Z1</td>\n",
       "      <td>2.92</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>XBX1</td>\n",
       "      <td>2.45</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Member Ticker and Exchange Code  Percentage Weight\n",
       "0                             BOZ1               3.83\n",
       "1                             C Z1               5.46\n",
       "2                             CLX1               8.86\n",
       "3                             COX1               7.30\n",
       "4                             CTZ1               1.54\n",
       "5                             GCZ1              11.96\n",
       "6                             HGZ1               5.17\n",
       "7                             HOX1               2.34\n",
       "8                             KCZ1               3.60\n",
       "9                             KWZ1               1.68\n",
       "10                           LAX21               4.62\n",
       "11                            LCV1               3.76\n",
       "12                            LHV1               1.90\n",
       "13                            LNX1               2.43\n",
       "14                            LXX1               2.91\n",
       "15                           NGX21              10.28\n",
       "16                            QSX1               2.86\n",
       "17                            S X1               4.97\n",
       "18                            SBV1               3.32\n",
       "19                            SIZ1               3.26\n",
       "20                            SMZ1               2.58\n",
       "21                            W Z1               2.92\n",
       "22                            XBX1               2.45"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bquery.bds(\"BCOM Index\", \"INDX_MWEIGHT\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "06501ec0",
   "metadata": {},
   "source": [
    "### Using overrides\n",
    "\n",
    "Various fields can be overriden. For info on what fields support what overrides, the best place to check is using\n",
    "`FLDS` from the terminal"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "a5cefec7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"2\" halign=\"left\">default</th>\n",
       "      <th colspan=\"2\" halign=\"left\">override</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>security</th>\n",
       "      <th>CRNCY_ADJ_PX_LAST</th>\n",
       "      <th>security</th>\n",
       "      <th>CRNCY_ADJ_PX_LAST</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>IBM US Equity</td>\n",
       "      <td>139.24</td>\n",
       "      <td>IBM US Equity</td>\n",
       "      <td>118.978</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         default                         override                  \n",
       "        security CRNCY_ADJ_PX_LAST       security CRNCY_ADJ_PX_LAST\n",
       "0  IBM US Equity            139.24  IBM US Equity           118.978"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pandas.concat(\n",
    "    [\n",
    "        bquery.bdp([\"IBM US Equity\"], [\"CRNCY_ADJ_PX_LAST\"]),\n",
    "        bquery.bdp(\n",
    "            [\"IBM US Equity\"], [\"CRNCY_ADJ_PX_LAST\"], overrides=[(\"EQY_FUND_CRNCY\", \"EUR\")]\n",
    "        )\n",
    "    ],\n",
    "    axis=1,\n",
    "    keys=[\"default\", \"override\"]\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "olympic-semester",
   "metadata": {
    "lines_to_next_cell": 2
   },
   "source": [
    "### Using sedols"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "drawn-distributor",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>security</th>\n",
       "      <th>ID_SEDOL1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>SPY US Equity</td>\n",
       "      <td>2840215</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>TLT US Equity</td>\n",
       "      <td>2971546</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        security ID_SEDOL1\n",
       "0  SPY US Equity   2840215\n",
       "1  TLT US Equity   2971546"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bquery.bdp(\n",
    "    [\"SPY US Equity\", \"TLT US Equity\"],\n",
    "    [\"ID_SEDOL1\"],\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "cross-update",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>security</th>\n",
       "      <th>PX_LAST</th>\n",
       "      <th>VOLUME</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2019-01-02</td>\n",
       "      <td>/sedol1/2840215</td>\n",
       "      <td>250.18</td>\n",
       "      <td>126925199.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2019-01-02</td>\n",
       "      <td>/sedol1/2971546</td>\n",
       "      <td>122.15</td>\n",
       "      <td>19841527.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2019-01-03</td>\n",
       "      <td>/sedol1/2840215</td>\n",
       "      <td>244.21</td>\n",
       "      <td>144140692.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2019-01-03</td>\n",
       "      <td>/sedol1/2971546</td>\n",
       "      <td>123.54</td>\n",
       "      <td>21187045.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2019-01-04</td>\n",
       "      <td>/sedol1/2840215</td>\n",
       "      <td>252.39</td>\n",
       "      <td>142628834.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2019-01-04</td>\n",
       "      <td>/sedol1/2971546</td>\n",
       "      <td>122.11</td>\n",
       "      <td>12970226.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2019-01-07</td>\n",
       "      <td>/sedol1/2840215</td>\n",
       "      <td>254.38</td>\n",
       "      <td>103139100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2019-01-07</td>\n",
       "      <td>/sedol1/2971546</td>\n",
       "      <td>121.75</td>\n",
       "      <td>8498104.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2019-01-08</td>\n",
       "      <td>/sedol1/2840215</td>\n",
       "      <td>256.77</td>\n",
       "      <td>102512587.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2019-01-08</td>\n",
       "      <td>/sedol1/2971546</td>\n",
       "      <td>121.43</td>\n",
       "      <td>7737103.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>2019-01-09</td>\n",
       "      <td>/sedol1/2840215</td>\n",
       "      <td>257.97</td>\n",
       "      <td>95006554.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>2019-01-09</td>\n",
       "      <td>/sedol1/2971546</td>\n",
       "      <td>121.24</td>\n",
       "      <td>9349245.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>2019-01-10</td>\n",
       "      <td>/sedol1/2840215</td>\n",
       "      <td>258.88</td>\n",
       "      <td>96823923.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>2019-01-10</td>\n",
       "      <td>/sedol1/2971546</td>\n",
       "      <td>120.46</td>\n",
       "      <td>8222860.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         date         security  PX_LAST       VOLUME\n",
       "0  2019-01-02  /sedol1/2840215   250.18  126925199.0\n",
       "1  2019-01-02  /sedol1/2971546   122.15   19841527.0\n",
       "2  2019-01-03  /sedol1/2840215   244.21  144140692.0\n",
       "3  2019-01-03  /sedol1/2971546   123.54   21187045.0\n",
       "4  2019-01-04  /sedol1/2840215   252.39  142628834.0\n",
       "5  2019-01-04  /sedol1/2971546   122.11   12970226.0\n",
       "6  2019-01-07  /sedol1/2840215   254.38  103139100.0\n",
       "7  2019-01-07  /sedol1/2971546   121.75    8498104.0\n",
       "8  2019-01-08  /sedol1/2840215   256.77  102512587.0\n",
       "9  2019-01-08  /sedol1/2971546   121.43    7737103.0\n",
       "10 2019-01-09  /sedol1/2840215   257.97   95006554.0\n",
       "11 2019-01-09  /sedol1/2971546   121.24    9349245.0\n",
       "12 2019-01-10  /sedol1/2840215   258.88   96823923.0\n",
       "13 2019-01-10  /sedol1/2971546   120.46    8222860.0"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bquery.bdh(\n",
    "    [\"/sedol1/2840215\", \"/sedol1/2971546\"],\n",
    "    [\"PX_LAST\", \"VOLUME\"],\n",
    "    start_date=\"20190101\",\n",
    "    end_date=\"20190110\",\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "designed-lender",
   "metadata": {},
   "source": [
    "## Troubleshooting\n",
    "\n",
    "The most common type of error are errors based on bad input to the underlying `blpapi` service. Since `blp` is simply a wrapper on top of `blpapi`, these errors will be progagated to the user. The easiest way for resolving these is to inspect the relevant error message for any obvious problems followed by contacting the Bloomberg help desk.\n",
    "\n",
    "For example, the following code will return an error since it contains an invalid ticker\n",
    "\n",
    "```python\n",
    "bquery.bdh(\n",
    "    [\"NOT_A_TICKER US Equity\", \"SPY US Equity\"],\n",
    "    [\"PX_LAST\", \"VOLUME\"],\n",
    "    start_date=\"20190101\",\n",
    "    end_date=\"20190110\",\n",
    ")\n",
    "```\n",
    "```\n",
    "TypeError: Response for 'NOT_A_TICKER US Equity' contains securityError\n",
    "{\n",
    "    \"securityError\": {\n",
    "        \"source\": \"3923::bbdbh4\",\n",
    "        \"code\": 15,\n",
    "        \"category\": \"BAD_SEC\",\n",
    "        \"message\": \"Unknown/Invalid securityInvalid Security [nid:3923] \",\n",
    "        \"subcategory\": \"INVALID_SECURITY\",\n",
    "    }\n",
    "}\n",
    "```\n",
    "\n",
    "If you want to ignore errors, you can instantiate a parser as follows"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "sharing-teens",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Response for 'NOT_A_TICKER US Equity' contains securityError {'securityError': {'source': '139::bbdbh4', 'code': 15, 'category': 'BAD_SEC', 'message': 'Unknown/Invalid securityInvalid Security [nid:139] ', 'subcategory': 'INVALID_SECURITY'}}\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>security</th>\n",
       "      <th>PX_LAST</th>\n",
       "      <th>VOLUME</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2019-01-02</td>\n",
       "      <td>SPY US Equity</td>\n",
       "      <td>250.18</td>\n",
       "      <td>126925199.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2019-01-03</td>\n",
       "      <td>SPY US Equity</td>\n",
       "      <td>244.21</td>\n",
       "      <td>144140692.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2019-01-04</td>\n",
       "      <td>SPY US Equity</td>\n",
       "      <td>252.39</td>\n",
       "      <td>142628834.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2019-01-07</td>\n",
       "      <td>SPY US Equity</td>\n",
       "      <td>254.38</td>\n",
       "      <td>103139100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2019-01-08</td>\n",
       "      <td>SPY US Equity</td>\n",
       "      <td>256.77</td>\n",
       "      <td>102512587.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2019-01-09</td>\n",
       "      <td>SPY US Equity</td>\n",
       "      <td>257.97</td>\n",
       "      <td>95006554.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2019-01-10</td>\n",
       "      <td>SPY US Equity</td>\n",
       "      <td>258.88</td>\n",
       "      <td>96823923.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        date       security  PX_LAST       VOLUME\n",
       "0 2019-01-02  SPY US Equity   250.18  126925199.0\n",
       "1 2019-01-03  SPY US Equity   244.21  144140692.0\n",
       "2 2019-01-04  SPY US Equity   252.39  142628834.0\n",
       "3 2019-01-07  SPY US Equity   254.38  103139100.0\n",
       "4 2019-01-08  SPY US Equity   256.77  102512587.0\n",
       "5 2019-01-09  SPY US Equity   257.97   95006554.0\n",
       "6 2019-01-10  SPY US Equity   258.88   96823923.0"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bquery = blp.BlpQuery(parser=blp.BlpParser(raise_security_errors=False)).start()\n",
    "\n",
    "bquery.bdh(\n",
    "    [\"NOT_A_TICKER US Equity\", \"SPY US Equity\"],\n",
    "    [\"PX_LAST\", \"VOLUME\"],\n",
    "    start_date=\"20190101\",\n",
    "    end_date=\"20190110\",\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "placed-mapping",
   "metadata": {},
   "source": [
    "## Retrieve json data"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "agricultural-johns",
   "metadata": {},
   "source": [
    "### Query generation utility methods"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "diverse-reasoning",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{\n",
      "  \"HistoricalDataRequest\": {\n",
      "    \"securities\": [\n",
      "      \"SPY US Equity\"\n",
      "    ],\n",
      "    \"fields\": [\n",
      "      \"VOLUME\"\n",
      "    ],\n",
      "    \"startDate\": \"20190101\",\n",
      "    \"endDate\": \"20190105\"\n",
      "  }\n",
      "}\n"
     ]
    }
   ],
   "source": [
    "query = blp.create_query(\n",
    "    request_type=\"HistoricalDataRequest\",\n",
    "    values={\n",
    "        \"securities\": [\"SPY US Equity\"],\n",
    "        \"fields\": [\"VOLUME\"],\n",
    "        \"startDate\": \"20190101\",\n",
    "        \"endDate\": \"20190105\",\n",
    "    },\n",
    ")\n",
    "print(json.dumps(query, indent=2))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "exempt-wichita",
   "metadata": {},
   "outputs": [],
   "source": [
    "# deal with Timestamps for pretty printing for response\n",
    "\n",
    "def ts_to_json(obj):\n",
    "    return obj.strftime(\"%Y-%m-%dT%H:%M:%S.%f%z\")\n",
    "\n",
    "\n",
    "def time_to_json(obj):\n",
    "    return obj.strftime(\"%H:%M:%S\")\n",
    "\n",
    "\n",
    "class CustomJSONEncoder(json.JSONEncoder):\n",
    "    def default(self, obj):\n",
    "        if isinstance(obj, pandas.Timestamp):\n",
    "            return ts_to_json(obj)\n",
    "        if isinstance(obj, datetime.time):\n",
    "            return time_to_json(obj)\n",
    "        return super().default(obj)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "multiple-spider",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[\n",
      "  {\n",
      "    \"eventType\": 5,\n",
      "    \"eventTypeName\": \"blpapi.Event.RESPONSE\",\n",
      "    \"messageNumber\": 0,\n",
      "    \"message\": {\n",
      "      \"fragmentType\": 0,\n",
      "      \"correlationIds\": [\n",
      "        25\n",
      "      ],\n",
      "      \"messageType\": \"HistoricalDataResponse\",\n",
      "      \"timeReceived\": null,\n",
      "      \"element\": {\n",
      "        \"HistoricalDataResponse\": {\n",
      "          \"securityData\": {\n",
      "            \"security\": \"SPY US Equity\",\n",
      "            \"eidData\": [],\n",
      "            \"sequenceNumber\": 0,\n",
      "            \"fieldExceptions\": [],\n",
      "            \"fieldData\": [\n",
      "              {\n",
      "                \"fieldData\": {\n",
      "                  \"date\": \"2019-01-02T00:00:00.000000\",\n",
      "                  \"VOLUME\": 126925199.0\n",
      "                }\n",
      "              },\n",
      "              {\n",
      "                \"fieldData\": {\n",
      "                  \"date\": \"2019-01-03T00:00:00.000000\",\n",
      "                  \"VOLUME\": 144140692.0\n",
      "                }\n",
      "              },\n",
      "              {\n",
      "                \"fieldData\": {\n",
      "                  \"date\": \"2019-01-04T00:00:00.000000\",\n",
      "                  \"VOLUME\": 142628834.0\n",
      "                }\n",
      "              }\n",
      "            ]\n",
      "          }\n",
      "        }\n",
      "      }\n",
      "    }\n",
      "  }\n",
      "]\n"
     ]
    }
   ],
   "source": [
    "resp = bquery.query(query, parse=False, collector=list)\n",
    "print(json.dumps(resp, indent=2, cls=CustomJSONEncoder))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "pretty-uncle",
   "metadata": {},
   "source": [
    "## Support for context manager"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "marine-version",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>security</th>\n",
       "      <th>PX_LAST</th>\n",
       "      <th>VOLUME</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2021-01-04</td>\n",
       "      <td>GME US Equity</td>\n",
       "      <td>17.25</td>\n",
       "      <td>10022474.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2021-01-05</td>\n",
       "      <td>GME US Equity</td>\n",
       "      <td>17.37</td>\n",
       "      <td>4961457.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2021-01-06</td>\n",
       "      <td>GME US Equity</td>\n",
       "      <td>18.36</td>\n",
       "      <td>6056248.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2021-01-07</td>\n",
       "      <td>GME US Equity</td>\n",
       "      <td>18.08</td>\n",
       "      <td>6129276.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2021-01-08</td>\n",
       "      <td>GME US Equity</td>\n",
       "      <td>17.69</td>\n",
       "      <td>6481960.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2021-01-11</td>\n",
       "      <td>GME US Equity</td>\n",
       "      <td>19.94</td>\n",
       "      <td>14927612.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2021-01-12</td>\n",
       "      <td>GME US Equity</td>\n",
       "      <td>19.95</td>\n",
       "      <td>7060665.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2021-01-13</td>\n",
       "      <td>GME US Equity</td>\n",
       "      <td>31.40</td>\n",
       "      <td>144501736.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2021-01-14</td>\n",
       "      <td>GME US Equity</td>\n",
       "      <td>39.91</td>\n",
       "      <td>93717410.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2021-01-15</td>\n",
       "      <td>GME US Equity</td>\n",
       "      <td>35.50</td>\n",
       "      <td>46866358.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>2021-01-19</td>\n",
       "      <td>GME US Equity</td>\n",
       "      <td>39.36</td>\n",
       "      <td>74721924.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>2021-01-20</td>\n",
       "      <td>GME US Equity</td>\n",
       "      <td>39.12</td>\n",
       "      <td>33471789.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>2021-01-21</td>\n",
       "      <td>GME US Equity</td>\n",
       "      <td>43.03</td>\n",
       "      <td>57079754.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>2021-01-22</td>\n",
       "      <td>GME US Equity</td>\n",
       "      <td>65.01</td>\n",
       "      <td>197157946.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>2021-01-25</td>\n",
       "      <td>GME US Equity</td>\n",
       "      <td>76.79</td>\n",
       "      <td>177874000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>2021-01-26</td>\n",
       "      <td>GME US Equity</td>\n",
       "      <td>147.98</td>\n",
       "      <td>178587974.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>2021-01-27</td>\n",
       "      <td>GME US Equity</td>\n",
       "      <td>347.51</td>\n",
       "      <td>93396666.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>2021-01-28</td>\n",
       "      <td>GME US Equity</td>\n",
       "      <td>193.60</td>\n",
       "      <td>58816595.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>2021-01-29</td>\n",
       "      <td>GME US Equity</td>\n",
       "      <td>325.00</td>\n",
       "      <td>50566055.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         date       security  PX_LAST       VOLUME\n",
       "0  2021-01-04  GME US Equity    17.25   10022474.0\n",
       "1  2021-01-05  GME US Equity    17.37    4961457.0\n",
       "2  2021-01-06  GME US Equity    18.36    6056248.0\n",
       "3  2021-01-07  GME US Equity    18.08    6129276.0\n",
       "4  2021-01-08  GME US Equity    17.69    6481960.0\n",
       "5  2021-01-11  GME US Equity    19.94   14927612.0\n",
       "6  2021-01-12  GME US Equity    19.95    7060665.0\n",
       "7  2021-01-13  GME US Equity    31.40  144501736.0\n",
       "8  2021-01-14  GME US Equity    39.91   93717410.0\n",
       "9  2021-01-15  GME US Equity    35.50   46866358.0\n",
       "10 2021-01-19  GME US Equity    39.36   74721924.0\n",
       "11 2021-01-20  GME US Equity    39.12   33471789.0\n",
       "12 2021-01-21  GME US Equity    43.03   57079754.0\n",
       "13 2021-01-22  GME US Equity    65.01  197157946.0\n",
       "14 2021-01-25  GME US Equity    76.79  177874000.0\n",
       "15 2021-01-26  GME US Equity   147.98  178587974.0\n",
       "16 2021-01-27  GME US Equity   347.51   93396666.0\n",
       "17 2021-01-28  GME US Equity   193.60   58816595.0\n",
       "18 2021-01-29  GME US Equity   325.00   50566055.0"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "with blp.BlpQuery() as bq:\n",
    "    df = bq.bdh(\n",
    "        [\"GME US Equity\"],\n",
    "        [\"PX_LAST\", \"VOLUME\"],\n",
    "        start_date=\"20210101\",\n",
    "        end_date=\"20210130\",\n",
    "    )\n",
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "intermediate-breach",
   "metadata": {},
   "source": [
    "## Stream data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "warming-nurse",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "SESSION_STATUS - Message 0 - SessionConnectionDown = {\n",
      "    server = \"localhost:8194\"\n",
      "}\n",
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{\n",
      "  \"fragmentType\": 0,\n",
      "  \"correlationIds\": [\n",
      "    \"USDCAD Curncy\"\n",
      "  ],\n",
      "  \"messageType\": \"MarketDataEvents\",\n",
      "  \"timeReceived\": \"2021-08-20T16:50:17.396011+0000\",\n",
      "  \"element\": {\n",
      "    \"MarketDataEvents\": {\n",
      "      \"MKTDATA_EVENT_TYPE\": \"SUMMARY\",\n",
      "      \"MKTDATA_EVENT_SUBTYPE\": \"INITPAINT\",\n",
      "      \"BID\": 1.2839,\n",
      "      \"ASK\": 1.284,\n",
      "      \"BEST_BID\": 1.2839,\n",
      "      \"BEST_ASK\": 1.284,\n",
      "      \"BID_ALL_SESSION\": 1.2839,\n",
      "      \"ASK_ALL_SESSION\": 1.284,\n",
      "      \"IND_BID_FLAG\": false,\n",
      "      \"IND_ASK_FLAG\": false,\n",
      "      \"BID_TDY\": 1.2839,\n",
      "      \"PRICE_LAST_BID_RT\": 1.2839,\n",
      "      \"ASK_TDY\": 1.284,\n",
      "      \"PRICE_LAST_ASK_RT\": 1.284,\n",
      "      \"BID_DIR\": -1,\n",
      "      \"ASK_DIR\": 1,\n",
      "      \"BID2\": 1.2839,\n",
      "      \"ASK2\": 1.284,\n",
      "      \"BID_ALL_SESSION_TDY_RT\": 1.2839,\n",
      "      \"ASK_ALL_SESSION_TDY_RT\": 1.284,\n",
      "      \"CURRENT_SESSION_RT\": 2,\n",
      "      \"PX_OPEN_ALL_WITH_SWITCHOVER_RT\": 1.2827529907226562,\n",
      "      \"PX_CLOSE_ALL_WITH_SWITCHOVER_RT\": 1.2828,\n",
      "      \"LAST_PRICE_ALL_SESSION_DIR_RT\": 1,\n",
      "      \"SIMP_LAST_PX_ALL_SESS_DIR_RT\": 1,\n",
      "      \"ID_BB_SEC_NUM_SRC\": 12884922137,\n",
      "      \"LAST_PRICE\": 1.284,\n",
      "      \"LAST2_TRADE\": 1.284,\n",
      "      \"HIGH\": 1.2949,\n",
      "      \"LOW\": 1.2814,\n",
      "      \"OPEN\": 1.2828,\n",
      "      \"OPEN_TDY\": 1.2828,\n",
      "      \"PRICE_OPEN_RT\": 1.2828,\n",
      "      \"LAST_PRICE_TDY\": 1.284,\n",
      "      \"HIGH_TDY\": 1.2949,\n",
      "      \"PRICE_HIGH_RT\": 1.2949,\n",
      "      \"LOW_TDY\": 1.2814,\n",
      "      \"PRICE_LOW_RT\": 1.2814,\n",
      "      \"MID\": 1.284,\n",
      "      \"MID_TDY\": 1.284,\n",
      "      \"LAST_ALL_SESSIONS\": 1.284,\n",
      "      \"PREV_CLOSE_VALUE_REALTIME\": 1.2828,\n",
      "      \"TRADING_DT_REALTIME\": \"2021-08-20T00:00:00.000000\",\n",
      "      \"PREV_TRADING_DT_REALTIME\": \"2021-08-19T00:00:00.000000\",\n",
      "      \"PRICE_CHANGE_1Y_NET_RT\": -0.03460000082850456,\n",
      "      \"PRICE_CHANGE_1Y_PCT_RT\": -2.6257998943328857,\n",
      "      \"CLOSING_PRICE_1Y_AGO_RT\": 1.318600058555603,\n",
      "      \"ZERO_BID_PRICE_INDICATOR_RT\": false,\n",
      "      \"ZERO_ASK_PRICE_INDICATOR_RT\": false,\n",
      "      \"RT_API_MACHINE\": \"apipubx0@md1p-ob-336\",\n",
      "      \"PX_LOW_BID_RT\": 1.2813900709152222,\n",
      "      \"PX_HIGH_ASK_RT\": 1.2949600219726562,\n",
      "      \"PX_HIGH_BID_RT\": 1.294839859008789,\n",
      "      \"PX_LOW_ASK_RT\": 1.2814998626708984,\n",
      "      \"ALL_PRICE\": 1.284,\n",
      "      \"MID2\": 1.284,\n",
      "      \"MID_DIR\": 1,\n",
      "      \"RT_PRICING_SOURCE\": \"BGN\",\n",
      "      \"ASK_CHANGE\": 0.0009603500366210938,\n",
      "      \"BID_CHANGE\": 0.0014553070068359375,\n",
      "      \"SPREAD_BA\": 0.0001,\n",
      "      \"PRICE_52_WEEK_HIGH_RT\": 1.3421,\n",
      "      \"PRICE_52_WEEK_HIGH_DATE_RT\": \"2020-09-30T00:00:00.000000\",\n",
      "      \"PRICE_52_WEEK_LOW_RT\": 1.2007,\n",
      "      \"PRICE_52_WEEK_LOW_DATE_RT\": \"2021-06-01T00:00:00.000000\",\n",
      "      \"PRICE_PREVIOUS_CLOSE_RT\": 1.2828,\n",
      "      \"PRICE_LAST_RT\": 1.284,\n",
      "      \"15_SECOND_PRICE_CHANGE_RT\": 0.0,\n",
      "      \"1_MINUTE_PRICE_CHANGE_RT\": 0.0,\n",
      "      \"5_MINUTE_PRICE_CHANGE_RT\": -0.0006000000284984708,\n",
      "      \"15_MINUTE_PRICE_CHANGE_RT\": -0.0007999999797903001,\n",
      "      \"10_MINUTE_PRICE_CHANGE_RT\": -0.0006000000284984708,\n",
      "      \"30_MINUTE_PRICE_CHANGE_RT\": -0.0019000000320374966,\n",
      "      \"1_HOUR_PRICE_CHANGE_RT\": -0.0012000000569969416,\n",
      "      \"PREVIOUS_CLOSE_BID_PRICE_RT\": 1.2825,\n",
      "      \"PREVIOUS_CLOSE_ASK_PRICE_RT\": 1.2831,\n",
      "      \"LAST_CONTINUOUS_TRADE_PRICE_RT\": 1.284,\n",
      "      \"LAST_TRADE_CANCELED_IND_RT\": false,\n",
      "      \"UNADJUSTED_PREV_LAST_PRICE_RT\": 1.2828,\n",
      "      \"ADJUSTED_PREV_LAST_PRICE_RT\": 1.2828,\n",
      "      \"BASE_PRICE_ENABLED_RT\": false,\n",
      "      \"NUM_TRADES_RT\": 0,\n",
      "      \"BLOOMBERG_CLOSE_METHOD_RT\": \"NA\",\n",
      "      \"LAST_TICK_DIRECTION_RT\": 0,\n",
      "      \"CHG_NET_REG_SES_PRV_RG_SES_CL_RT\": 0.0012083053588867188,\n",
      "      \"CHG_PCT_REG_SES_PRV_RG_SES_CL_RT\": 0.09419521083891727,\n",
      "      \"SHORTENED_BID_ASK_RT\": \"1.2839/40\",\n",
      "      \"IS_DELAYED_STREAM\": false,\n",
      "      \"EXCH_CODE_LAST_ALL_SESSION_RT\": \"\",\n",
      "      \"LOC_SRC_FOR_LST_TRD_ALL_SESS_RT\": \"\",\n",
      "      \"CHG_NET_MTD_RT\": 0.0365,\n",
      "      \"CHG_PCT_MTD_RT\": 2.9259,\n",
      "      \"CHG_NET_QTD_RT\": 0.0442,\n",
      "      \"CHG_PCT_QTD_RT\": 3.5651,\n",
      "      \"CHG_NET_YTD_RT\": 0.0115,\n",
      "      \"CHG_PCT_YTD_RT\": 0.9037,\n",
      "      \"CHG_NET_1M_RT\": 0.0158,\n",
      "      \"CHG_PCT_1M_RT\": 1.2459,\n",
      "      \"CHG_NET_3M_RT\": 0.0779,\n",
      "      \"CHG_PCT_3M_RT\": 6.4588,\n",
      "      \"REALTIME_2_DAY_CHANGE_NET\": 0.0182,\n",
      "      \"REALTIME_2_DAY_CHANGE_PERCENT\": 1.4378,\n",
      "      \"REALTIME_5_DAY_CHANGE_NET\": 0.0325,\n",
      "      \"REALTIME_5_DAY_CHANGE_PERCENT\": 2.5969,\n",
      "      \"RT_PX_AS_PCT_INTRADAY_RANGE\": 19.2593,\n",
      "      \"REALTIME_PERCENT_BID_ASK_SPREAD\": 0.007800000000003138,\n",
      "      \"REALTIME_15_SEC_PRICE_PCT_CHG\": 0.0,\n",
      "      \"REALTIME_ONE_MIN_PRICE_PCT_CHG\": 0.0,\n",
      "      \"REALTIME_FIVE_MIN_PRICE_PCT_CHG\": -0.0467,\n",
      "      \"REALTIME_15_MIN_PRICE_PCT_CHG\": -0.0623,\n",
      "      \"REALTIME_ONE_HOUR_PRICE_PCT_CHG\": -0.0934,\n",
      "      \"CHG_NET_1D_ALL_FROM_REGULAR_RT\": 0.0012,\n",
      "      \"CHG_PCT_1D_ALL_FROM_REGULAR_RT\": 0.0935,\n",
      "      \"PX_CHG_NET_1D_ALL_SWITCHOVER_RT\": 0.0012,\n",
      "      \"PX_CHG_PCT_1D_ALL_SWITCHOVER_RT\": 0.0935,\n",
      "      \"API_RULES_VERSION\": 201411210,\n",
      "      \"PREV_SES_LAST_PRICE\": 1.2828,\n",
      "      \"RT_PX_CHG_NET_1D\": 0.0012,\n",
      "      \"RT_PX_CHG_PCT_1D\": 0.09350000321865082,\n",
      "      \"PRICE_CHANGE_ON_DAY_RT\": 0.0012,\n",
      "      \"NET_CHANGE_ON_DAY_TODAY_RT\": 0.0012,\n",
      "      \"PERCENT_CHANGE_ON_DAY_TODAY_RT\": 0.0935,\n",
      "      \"LAST_UPDATE_BID_RT\": \"00:50:17\",\n",
      "      \"LAST_UPDATE_ASK_RT\": \"00:50:17\",\n",
      "      \"TIME\": \"00:50:17\",\n",
      "      \"PROXY_TIME_OF_LAST_UPDATE_RT\": null,\n",
      "      \"BID_ASK_TIME\": \"00:50:17\",\n",
      "      \"SES_START\": \"05:00:00\",\n",
      "      \"SES_END\": \"04:59:59\",\n",
      "      \"PRICE_LAST_TIME_RT\": \"00:50:17\",\n",
      "      \"LAST_BID_TIME_TODAY_REALTIME\": \"00:50:17\",\n",
      "      \"LAST_ASK_TIME_TODAY_REALTIME\": \"00:50:17\",\n",
      "      \"LAST_PRICE_TIME_TODAY_REALTIME\": \"00:50:17\",\n",
      "      \"LAST_UPDATE_ALL_SESSIONS_RT\": \"00:50:17\"\n",
      "    }\n",
      "  }\n",
      "}\n",
      "{\n",
      "  \"fragmentType\": 0,\n",
      "  \"correlationIds\": [\n",
      "    \"USDCAD Curncy\"\n",
      "  ],\n",
      "  \"messageType\": \"MarketDataEvents\",\n",
      "  \"timeReceived\": \"2021-08-20T16:50:17.449316+0000\",\n",
      "  \"element\": {\n",
      "    \"MarketDataEvents\": {\n",
      "      \"MKTDATA_EVENT_TYPE\": \"TRADE\",\n",
      "      \"MKTDATA_EVENT_SUBTYPE\": \"NEW\",\n",
      "      \"LAST_ALL_SESSIONS\": 1.284,\n",
      "      \"LAST2_TRADE\": 1.284,\n",
      "      \"LAST_PRICE\": 1.284,\n",
      "      \"LAST_PRICE_TDY\": 1.284,\n",
      "      \"LAST2_DIR\": null,\n",
      "      \"LAST_TICK_DIRECTION_RT\": 0,\n",
      "      \"ALL_PRICE_COND_CODE\": null,\n",
      "      \"ALL_PRICE\": 1.284,\n",
      "      \"LAST_PRICE_COND_CODE_RT\": null,\n",
      "      \"PRICE_CHANGE_1Y_NET_RT\": -0.03460000082850456,\n",
      "      \"PRICE_CHANGE_1Y_PCT_RT\": -2.624000072479248,\n",
      "      \"LAST_CONTINUOUS_TRADE_PRICE_RT\": 1.284,\n",
      "      \"PRICE_LAST_RT\": 1.284,\n",
      "      \"EVT_TRADE_PRICE_RT\": 1.284,\n",
      "      \"EVT_TRADE_SIZE_RT\": 0,\n",
      "      \"EVT_TRADE_CONDITION_CODE_RT\": null,\n",
      "      \"EVT_TRADE_LOCAL_EXCH_SOURCE_RT\": null,\n",
      "      \"EVT_TRADE_SOURCE_TYPE_CODE_RT\": null,\n",
      "      \"EVT_TRADE_INTEGER_IDENTIFIER_RT\": null,\n",
      "      \"EVT_TRADE_IDENTIFIER_RT\": null,\n",
      "      \"EXCH_CODE_LAST_ALL_SESSION_RT\": null,\n",
      "      \"LOC_SRC_FOR_LST_TRD_ALL_SESS_RT\": null,\n",
      "      \"CHG_NET_REG_SESSION_CLOSE\": null,\n",
      "      \"CHG_PCT_REG_SESSION_CLOSE\": null,\n",
      "      \"CHG_NET_PREV_DAY_POST_CLS\": null,\n",
      "      \"CHG_PCT_PREV_DAY_POST_CLS\": null,\n",
      "      \"CHG_NET_1D_PRE_FROM_REGULAR_RT\": null,\n",
      "      \"CHG_PCT_1D_PRE_FROM_REGULAR_RT\": null,\n",
      "      \"CHG_NET_1D_ALL_FROM_REGULAR_RT\": 0.0012,\n",
      "      \"CHG_PCT_1D_ALL_FROM_REGULAR_RT\": 0.0935,\n",
      "      \"CHG_NET_1D_POST_FROM_REGULAR_RT\": null,\n",
      "      \"CHG_PCT_1D_POST_FROM_REGULAR_RT\": null,\n",
      "      \"PX_CHG_NET_1D_ALL_SWITCHOVER_RT\": 0.0012,\n",
      "      \"PX_CHG_PCT_1D_ALL_SWITCHOVER_RT\": 0.0935,\n",
      "      \"CHG_NET_REG_SES_PRV_RG_SES_CL_RT\": 0.0012,\n",
      "      \"CHG_PCT_REG_SES_PRV_RG_SES_CL_RT\": 0.093545,\n",
      "      \"CHG_NET_MTD_RT\": 0.0365,\n",
      "      \"CHG_PCT_MTD_RT\": 2.9259,\n",
      "      \"CHG_NET_QTD_RT\": 0.0442,\n",
      "      \"CHG_PCT_QTD_RT\": 3.5651,\n",
      "      \"CHG_NET_YTD_RT\": 0.0115,\n",
      "      \"CHG_PCT_YTD_RT\": 0.9037,\n",
      "      \"CHG_NET_1M_RT\": 0.0158,\n",
      "      \"CHG_PCT_1M_RT\": 1.2459,\n",
      "      \"CHG_NET_3M_RT\": 0.0779,\n",
      "      \"CHG_PCT_3M_RT\": 6.4588,\n",
      "      \"REALTIME_2_DAY_CHANGE_NET\": 0.0182,\n",
      "      \"REALTIME_2_DAY_CHANGE_PERCENT\": 1.4378,\n",
      "      \"REALTIME_5_DAY_CHANGE_NET\": 0.0325,\n",
      "      \"REALTIME_5_DAY_CHANGE_PERCENT\": 2.5969,\n",
      "      \"RT_PX_AS_PCT_INTRADAY_RANGE\": 19.2593,\n",
      "      \"REALTIME_PERCENT_BID_ASK_SPREAD\": 0.007800000000003138,\n",
      "      \"RT_THEORETICAL_PCT_CHG_FROM_LAST\": null,\n",
      "      \"REALTIME_15_SEC_PRICE_PCT_CHG\": 0.0,\n",
      "      \"REALTIME_ONE_MIN_PRICE_PCT_CHG\": 0.0,\n",
      "      \"REALTIME_FIVE_MIN_PRICE_PCT_CHG\": -0.0467,\n",
      "      \"REALTIME_15_MIN_PRICE_PCT_CHG\": -0.0623,\n",
      "      \"REALTIME_ONE_HOUR_PRICE_PCT_CHG\": -0.0934,\n",
      "      \"REALTIME_VOLUME_5_DAY_INTERVAL\": null,\n",
      "      \"DELTA_AVAT_1_DAY_INTERVAL\": null,\n",
      "      \"DELTA_AVAT_5_DAY_INTERVAL\": null,\n",
      "      \"DELTA_AVAT_10_DAY_INTERVAL\": null,\n",
      "      \"DELTA_AVAT_20_DAY_INTERVAL\": null,\n",
      "      \"DELTA_AVAT_30_DAY_INTERVAL\": null,\n",
      "      \"DELTA_AVAT_100_DAY_INTERVAL\": null,\n",
      "      \"DELTA_AVAT_180_DAY_INTERVAL\": null,\n",
      "      \"DELTA_ATAT_1_DAY_INTERVAL\": null,\n",
      "      \"DELTA_ATAT_5_DAY_INTERVAL\": null,\n",
      "      \"DELTA_ATAT_10_DAY_INTERVAL\": null,\n",
      "      \"DELTA_ATAT_20_DAY_INTERVAL\": null,\n",
      "      \"DELTA_ATAT_30_DAY_INTERVAL\": null,\n",
      "      \"DELTA_ATAT_100_DAY_INTERVAL\": null,\n",
      "      \"DELTA_ATAT_180_DAY_INTERVAL\": null,\n",
      "      \"RT_PX_CHG_NET_1D\": 0.0012,\n",
      "      \"RT_PX_CHG_PCT_1D\": 0.09350000321865082,\n",
      "      \"PRICE_CHANGE_ON_DAY_RT\": 0.0012,\n",
      "      \"NET_CHANGE_ON_DAY_TODAY_RT\": 0.0012,\n",
      "      \"PERCENT_CHANGE_ON_DAY_TODAY_RT\": 0.0935,\n",
      "      \"LAST_UPDATE_CHG_1D_RT\": 0.0012000000569969416,\n",
      "      \"EVT_TRADE_TIME_RT\": \"00:50:17\",\n",
      "      \"TRADE_UPDATE_STAMP_RT\": \"2021-08-21T00:50:17.000000+0800\",\n",
      "      \"IS_DELAYED_STREAM\": false,\n",
      "      \"EVT_UPDATE_ACTIONS_RT\": 271,\n",
      "      \"TIME\": \"00:50:17\",\n",
      "      \"PRICE_LAST_TIME_RT\": \"00:50:17\",\n",
      "      \"LAST_PRICE_TIME_TODAY_REALTIME\": \"00:50:17\",\n",
      "      \"EVENT_TIME\": \"00:50:17\",\n",
      "      \"LAST_UPDATE_ALL_SESSIONS_RT\": \"00:50:17\",\n",
      "      \"BLOOMBERG_SEND_TIME_RT\": \"16:50:17\"\n",
      "    }\n",
      "  }\n",
      "}\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "20AUG2021_12:50:34.721 28102:140461514245888 WARN blpapi_platformcontroller.cpp:377 blpapi.session.platformcontroller.{1} Connectivity lost, no connected endpoints. \n",
      "\n",
      "20AUG2021_12:50:34.722 28102:140461479098112 WARN blpapi_platformcontroller.cpp:377 blpapi.session.platformcontroller.{2} Connectivity lost, no connected endpoints. \n",
      "\n",
      "20AUG2021_12:50:34.724 28102:140461522839296 WARN apicm_apiconnector.cpp:570 ApiConnector::negotiatorCallback localhost: Session negotiation failed for 127.0.0.1:8194 result = 1 \n",
      "\n",
      "20AUG2021_12:50:34.724 28102:140461487490816 WARN apicm_apiconnector.cpp:570 ApiConnector::negotiatorCallback localhost: Session negotiation failed for 127.0.0.1:8194 result = 1 \n",
      "\n",
      "20AUG2021_12:50:34.724 28102:140461522839296 WARN blpapi_apicmadapter.cpp:335 blpapi.session.transporttcp.apicmadapter.{1} Failed BBCOMM session negotiation localhost:8194 <127.0.0.1:8194> \n",
      "\n",
      "20AUG2021_12:50:34.724 28102:140461487490816 WARN blpapi_apicmadapter.cpp:335 blpapi.session.transporttcp.apicmadapter.{2} Failed BBCOMM session negotiation localhost:8194 <127.0.0.1:8194> \n",
      "\n",
      "20AUG2021_12:50:34.724 28102:140461522839296 WARN blpapi_platformtransporttcp.cpp:151 blpapi.session.transporttcp.{1}.<localhost:8194> { platformId=0 } 127.0.0.1, session pool state=Failed \n",
      "\n",
      "20AUG2021_12:50:34.724 28102:140461522839296 WARN blpapi_platformcontroller.cpp:607 blpapi.session.platformcontroller.{1} Platform failed 1 consecutive connect attempts, stopped trying to reconnect. { PlatformId=0 }  \n",
      "\n",
      "20AUG2021_12:50:34.724 28102:140461487490816 WARN blpapi_platformtransporttcp.cpp:151 blpapi.session.transporttcp.{2}.<localhost:8194> { platformId=0 } 127.0.0.1, session pool state=Failed \n",
      "\n",
      "20AUG2021_12:50:34.724 28102:140461487490816 WARN blpapi_platformcontroller.cpp:607 blpapi.session.platformcontroller.{2} Platform failed 1 consecutive connect attempts, stopped trying to reconnect. { PlatformId=0 }  \n"
     ]
    }
   ],
   "source": [
    "# Ticks\n",
    "with blp.BlpStream() as bs:\n",
    "    bs.subscribe({\"USDCAD Curncy\": {\"fields\": [\"LAST_PRICE\"]}})\n",
    "    n = 0\n",
    "    for ev in bs.events(timeout=60):\n",
    "        print(json.dumps(ev, indent=2, cls=CustomJSONEncoder))\n",
    "        n += 1\n",
    "        if n > 1:\n",
    "            break\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "dying-gabriel",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Bars\n",
    "with blp.BlpStream(setDefaultSubscriptionService=\"//blp/mktbar\") as bs:\n",
    "    bs.subscribe({\n",
    "        \"USDCAD Curncy\": {\n",
    "            \"fields\": [\"LAST_PRICE\"],\n",
    "            \"options\": \"interval=1&start_time=00:00&end_time=23:59\"\n",
    "        }\n",
    "    })\n",
    "    n = 0\n",
    "    for ev in bs.events(timeout=60):\n",
    "        print(json.dumps(ev, indent=2, cls=CustomJSONEncoder))\n",
    "        n += 1\n",
    "        if n > 1:\n",
    "            break\n"
   ]
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "py:percent,ipynb"
  },
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
